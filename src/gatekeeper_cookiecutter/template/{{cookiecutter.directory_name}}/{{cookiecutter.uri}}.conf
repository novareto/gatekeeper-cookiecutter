WSGIPythonHome "{{cookiecutter.fullpath}}"

LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %D %>D BGHW" combined_ls
<IfModule mod_ssl.c>

<VirtualHost {{cookiecutter.public_ip}}:443>
  ServerAdmin {{cookiecutter.ServerAdmin}} 
  ServerName {{cookiecutter.uri}} 
  LogLevel debug ssl:info
  ErrorLog  /var/log/apache2/{{cookiecutter.uri}}_error.log
  CustomLog /var/log/apache2/{{cookiecutter.uri}}_access.log combined_ls

  SSLEngine on
  SSLCertificateFile /etc/apache2/cert/{{cookiecutter.domain}}.crt
  SSLCACertificateFile /etc/apache2/cert/{{cookiecutter.domain}}.crt
  SSLCertificateKeyFile /etc/apache2/cert/{{cookiecutter.domain}}.key

  TKTAuthPublicKey {{cookiecutter.fullpath}}/etc/pubkey.pem
  WSGIDaemonProcess gatekeeper user={{cookiecutter.deamon_user}} group={{cookiecutter.deamon_user}} threads=1 home={{cookiecutter.fullpath}}
  WSGIProcessGroup gatekeeper

  <Directory "{{cookiecutter.fullpath}}">
    WSGIProcessGroup gatekeeper
    WSGIApplicationGroup %{GLOBAL}
    Require all granted
  </Directory>

  <Location "/static/">
    Options -Indexes
  </Location>
  
  Alias /static/ {{cookiecutter.fullpath}}/keeper/static/
  WSGIScriptAlias /login {{cookiecutter.fullpath}}/app.py
  
  <Proxy http://HOST_PORT/*>
    AuthType mod_auth_pubtkt
    TKTAuthLoginURL   https://{{cookiecutter.uri}}/login
    TKTAuthTimeoutURL https://{{cookiecutter.uri}}/?timeout=1
    TKTAuthUnauthURL  https://{{cookiecutter.uri}}/?unauth=1
    TKTAuthDebug 0
    TKTAuthFakeBasicAuth on
    TKTAuthPassthruBasicAuth on
    TKTAuthPassthruBasicKey ${config:conf-crypto-cipher}
    require valid-user
  </Proxy>

  RewriteEngine on
  RewriteCond %{REQUEST_URI} !^/login*
  RewriteCond %{REQUEST_URI} !^/static/*
  # GROK
  # RewriteRule ^(/?.*) http://HOST_PORT/portal/++vh++https:{{cookiecutter.uri}}:443/++$1 [P]
  # PLONE
  # RewriteRule ^(/?.*) http://HOST_PORT/VirtualHostBase/https/{{cookiecutter.uri}}:443/vergabe/VirtualHostRoot/$1 [P]

</VirtualHost>
</IfModule>